@import "compass/css3";
@import "compass/css3/transform";

* {
    @include box-sizing(border-box);
}

body {
    // -webkit-font-smoothing: subpixel-antialiased;
    // -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-family: 'Trebuchet MS', sans-serif;
    color: #777;
    border: 0;
    margin: 0;
    @media all and (min-width: 1000px) {
        background: inline-image("betterrecipes/bg.png") 50% 0 repeat-y;
    }
}

a {
    text-decoration: none;
    cursor: pointer;
    &,
    &:visited,
    &:hover,
    &:active {
        color: #606;
    }
    &:hover {
        text-decoration: underline;
    }
}

h1, h2, h3, h4, h5, h6 {
    font-weight: 400;
}

.btn, input[type="submit"] {
    font-family: inherit;
    letter-spacing: 1px;
}

input::-moz-focus-inner,
button::-moz-focus-inner {
    border: 0;
    padding: 0;
}

// globally used to maintain elements within max-width
// CAREFUL: you should not need to alter this anywhere else in the SCSS
.wrap {
    max-width: 1000px;
    margin: 0 auto;
    position: relative;
}

header {
    text-align: center;
    .logo,
    .ad-728x90 {
        height: 90px;
    }
    .logo {
        // I'D PREFER THIS HEIGHT TO BE A PADDING-BOTTOM: XX%
        // IT WOULD LOOK BETTER WHEN SNAPPING TO RESPONSIVE SIZES
        display: block;
        width: 272px;
        color: transparent;
        background-image: inline-image("betterrecipes/logo.svg");
        background-size: auto 55%;
        background-position: 1em 55%;
        background-repeat: no-repeat;
    }
    .ad-728x90 {
        position: absolute;
        top: 0;
        right: 0;
        width: 728px;
    }
    @media all and (max-width: 1000px) {
        .logo,
        .ad-728x90 {
            display: block;
            position: relative;
            margin: 0 auto;
        }
        .logo {
            width: 100%;
            background-position: 50% 60%;
        }
    }
    @media all and (max-width: 727px) {
        .ad-728x90 {
            display: none;
        }
    }
}

nav {
    background: rgb(134, 54, 134); // or #863686
    // From: http://stackoverflow.com/questions/12228548/findinq-equivalent-color-with-opacity
    // r1 = (r3 - r2 + r2*a1)/a1
    // g1 = (g3 - g2 + g2*a1)/a1
    // b1 = (b3 - b2 + b2*a1)/a1
    //
    // RGB3 (the final desired color)
    // RGB2 (the background color)
    // A1 (how much opacity you want)
    //
    // Let's find the right rgba for .79 opacity*:
    // r1 = (134 - 255 + 255*.79)/.79 ~= 102
    // g1 = ( 54 - 255 + 255*.79)/.79 ~= 0
    // b1 = (134 - 255 + 255*.79)/.79 ~= 102
    //
    // *.79 is the most translucent we can get without making g1 < 0
    // which, would be out of range
    //
    background: rgba(102, 0, 102, .79);
    font-size: 1.3em;
    line-height: 100%;
    letter-spacing: 1px;
    padding: .25em 0;
    a,
    form {
        display: inline-block;
        vertical-align: middle;
        margin: .25em 2%;
    }
    a {
        color: #fff;
        text-transform: uppercase;
        &:hover,
        &:visited {
            color: #fff;
        }
        &.on {
            text-decoration: underline;
        }
    }
    input {
        display: block;
        outline: 0;
        height: 100%;
        // padding: 0;
    }
    form {
        display: inline-block;
        width: 10em;
        // height: 100%;
        // height: 1.3em;
        overflow: hidden;
        position: relative;
        padding-right: 1em;
    }
    input[type="text"] {
        border-radius: 0;
        border: 0;
        width: 100%;
        margin-right: 1em;
        border-top-left-radius: .3rem;
        border-bottom-left-radius: .3rem;
        font-size: 75%;
        padding: .2em .3em;
    }
    input[type="submit"] {
        background: #ebebeb;
        border: 0;
        border-radius: 0;
        border-top-right-radius: .3rem;
        border-bottom-right-radius: .3rem;
        position: absolute;
        top: 0;
        right: 0;
        text-transform: uppercase;
        color: #863686;
        letter-spacing: 0;
        font-weight: 600;
        -webkit-appearance: button;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }
}

.wrap > .main {
    margin-top: 1em;
    margin-left: 1em;
    margin-right: 300px;
    border-right: 1em solid transparent;
    min-height: 1048px; // (250px x 4) + (16 (1em) x 4)
    @include box-sizing(content-box);
    @media all and (max-width: 727px) {
        margin-right: 1em;
        border-right: none;
    }
}
.wrap > .rail {
    position: absolute;
    width: 300px;
    height: 100%;
    overflow: auto;
    top: 0;
    right: 0;
    > * {
        margin-top: 1em;
        display: block;
    }
    > *:first-child {
        margin-top: 0;
    }
    @media all and (max-width: 727px) {
        position: relative;
        top: auto;
        right: auto;
        width: auto;
        & > * {
            display: inline-block;
            width: 300px;
            vertical-align: top;
            margin-left: 1em;
        }
        & > *:first-child {
            margin-top: 1em;
        }
    }
    @media all and (max-width: 600px) {
        & > * {
            display: block;
            margin: 1em auto;
        }
    }
}

footer {
    background: rgb(230, 218, 230); // #e6dae6
    // From: http://stackoverflow.com/questions/12228548/findinq-equivalent-color-with-opacity
    // r1 = (r3 - r2 + r2*a1)/a1
    // g1 = (g3 - g2 + g2*a1)/a1
    // b1 = (b3 - b2 + b2*a1)/a1
    //
    // RGB3 (the final desired color)
    // RGB2 (the background color)
    // A1 (how much opacity you want)
    //
    // Let's find the right rgba for .79 opacity*:
    // r1 = (230 - 255 + 255*.5)/.5 ~= 205
    // g1 = (218 - 255 + 255*.5)/.5 ~= 181
    // b1 = (230 - 255 + 255*.5)/.5 ~= 205
    //
    background: rgba(205, 181, 205, .5);
    padding: 1em;
    text-align: center;
}
